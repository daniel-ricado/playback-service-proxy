worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    keepalive_timeout   65;

    # Logging
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    server {
        listen       80;
        # listen       443 ssl;
        server_name  localhost;

        # SSL configuration
        # ssl_certificate     /path/to/your/fullchain.pem;
        # ssl_certificate_key /path/to/your/privkey.pem;
        # ssl_protocols       TLSv1.2 TLSv1.3;
        # ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            return 403;
        }

        location /generate-manifest {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Query-String $query_string;
        }

        location /request-manifest {
            set $camera_id $arg_camera_id;

            alias /var/nginx/manifests/;
            
            try_files $camera_id.m3u8 =404;
            #add_header Content-Type text/plain;  # Set content type to plain text
            #return 200 "$camera_id";  # Respond with the camera_id value
            
            # add_header Content-Type text/plain; 
            # return 404 "No camera_id provided";
        }
    }
}